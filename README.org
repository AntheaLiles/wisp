#+bibliography: bibliography.bib

#+BEGIN_EXAMPLE
         █     █░ ██▓  ██████  ██▓███
        ▓█░ █ ░█░▓██▒▒██    ▒ ▓██░  ██▒
        ▒█░ █ ░█ ▒██▒░ ▓██▄   ▓██░ ██▓▒
        ░█░ █ ░█ ░██░  ▒   ██▒▒██▄█▓▒ ▒
        ░░██▒██▓ ░██░▒██████▒▒▒██▒ ░  ░
        ░ ▓░▒ ▒  ░▓  ▒ ▒▓▒ ▒ ░▒▓▒░ ░  ░
          ▒ ░ ░   ▒ ░░ ░▒  ░ ░░▒ ░
          ░   ░   ▒ ░░  ░  ░  ░░
            ░     ░        ░
#+END_EXAMPLE

*Wisp* is a Lisp system for [[https://webassembly.org][WebAssembly]] and native execution.

It aims to offer an unusually pleasant developer experience
both while hacking and in production, though it's still /very
immature/ and far from ready for any serious use.

You can try the live browser-based IDE at [[https://wisp.town][Wisp.Town]].

Feel free to join the [[https://discord.gg/BeKtM3x687][Wisp Discord chat]] if you're interested
in following the development work, hacking on the system, or
chatting about Lisp, WebAssembly, and Zig.

Wisp has:

  - a browser-based IDE for live hacking and interactive
    debugging;

  - saving and loading of full system state images, including
    debugger state, also in browser local storage;

  - thoughtful integration with the browser environment, Node,
    Deno, and Unix in general;

  - first-class delimited continuations for advanced control
    flow;

  - interactive restartable conditions in the style of Common
    Lisp;

  - first-class stepwise execution for custom debuggers,
    schedulers, etc;

  - sandboxed execution with fine-grained capabilities via
    WebAssembly;

  - an implementation written in [[https://ziglang.org][Zig]];

  - and more!

* Local Variables :noexport:
  Local Variables:
  fill-column: 62
  End:
